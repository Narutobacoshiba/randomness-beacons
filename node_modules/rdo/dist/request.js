"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const ky_universal_1 = __importDefault(require("ky-universal"));
const put_after_1 = __importDefault(require("put-after"));
const array_initial_1 = __importDefault(require("array-initial"));
/**
 * Ky interface to the Random.org v2 JSON RPC API.
*/
async function reqAPI(method, { data, getRandomData = true, signed = false }) {
    const shouldSign = signed && method.startsWith("generate") && data.apiKey;
    if (shouldSign)
        method = put_after_1.default(method, "generate", "Signed");
    const { result, error } = await ky_universal_1.default.post("https://api.random.org/json-rpc/2/invoke", {
        json: {
            jsonrpc: "2.0",
            method: method,
            params: data,
            id: 0
        }
    }).json();
    if (error)
        throw new ReferenceError(error);
    if (shouldSign) {
        return await reqAPI("getResult", {
            data: {
                apiKey: data.apiKey,
                serialNumber: result.random.serialNumber
            },
            getRandomData
        });
    }
    if (getRandomData && !result.random)
        return undefined;
    return getRandomData ? result.random.data : result;
}
exports.reqAPI = reqAPI;
/**
 * Ky interface to the Random.org public API.
*/
async function reqPublic(method, { data, convertToNumber = false }) {
    const result = await ky_universal_1.default(method, {
        prefixUrl: "https://www.random.org/",
        searchParams: {
            format: "plain",
            ...data,
        },
    }).text();
    const value = array_initial_1.default(result.split("\n"));
    return convertToNumber ? value.map((val) => Number(val)) : value;
}
exports.reqPublic = reqPublic;
//# sourceMappingURL=request.js.map